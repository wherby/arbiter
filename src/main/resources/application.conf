

dora {
  my-app {
    routes {
      # If ask takes more time than this to complete the request is failed
      ask-timeout = 5s
    }
  }

  blocking-io-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      fixed-pool-size = 32
    }
    throughput = 3
  }




  akka.actor.debug.receive = on
  akka {
    cluster.jmx.multi-mbeans-in-same-jvm = on
    loglevel = debug

    # Log the complete configuration at INFO level when the actor system is started.
    # This is useful when you are uncertain of what configuration is used.
    #log-config-on-start = on

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
      debug {
        # enable DEBUG logging of actor lifecycle changes
        lifecycle = off
        # enable DEBUG logging of unhandled messages
        unhandled = off
        # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill etc.)
        autoreceive = off
        # enable function of LoggingReceive, which is to log any received message at
        # DEBUG level
        receive = on
        # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
        fsm = off
      }
    }
    remote {
      log-remote-lifecycle-events = on
      netty.tcp {
        hostname = 127.0.0.1
        port = 1610
      }
    }
    cluster {
      seed-nodes = [
        "akka.tcp://clustering-cluster@127.0.0.1:1600"
      ]
      auto-down-unreachable-after = 10s
    }
  }


}


